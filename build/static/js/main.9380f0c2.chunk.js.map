{"version":3,"sources":["pages/Meeting.js","pages/CreatePage.js","lib/rtc.js","App.js","reportWebVitals.js","index.js"],"names":["localStream","CreateMeeting","useEffect","peerConnectionConfig","iceServers","urls","username","credential","cm","connections","id","onicecandidate","onaddstream","ontrack","this","peer","RTCPeerConnection","socket","errorHandler","error","console","log","Meeting","useParams","useState","setUser","userStatus","setUserStatus","setSocketId","users","useRef","userStatusref","navigator","mediaDevices","getUserMedia","video","audio","then","stream","onaddtrack","c","setTimeout","remoteVideo","document","getElementById","srcObject","catch","e","io","connect","secure","transports","on","emit","callID","userName","fromId","message","addPeer","event","candidate","ice","from","streams","track","getVideoTracks","addTrack","sdp","setRemoteDescription","RTCSessionDescription","type","createAnswer","description","setLocalDescription","localDescription","addIceCandidate","RTCIceCandidate","d","current","usersList","setInterval","Object","keys","map","us","connectionState","requestConnection","u","createOffer","to","signal","style","position","height","width","border","display","flexDirection","flex","flexWrap","autoPlay","muted","overflow","i","padding","margin","maxWidth","maxHeight","textAlign","onClick","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9380f0c2.chunk.js","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport io, { Socket } from \"socket.io-client\";\nimport { Button } from \"antd\";\n\nimport cm from \"../lib/rtc\";\nimport { useParams } from \"react-router-dom\";\n\nlet socket = null;\nvar localVideo;\nvar localStream;\nvar remoteVideo;\nvar peerConnection;\nvar s;\nvar serverConnection;\n\nfunction errorHandler(error) {\n  console.log(error);\n}\n\nconst Meeting = () => {\n  let { id } = useParams();\n  const [user, setUser] = useState({});\n  const [userStatus, setUserStatus] = useState({});\n  const [socketId, setSocketId] = useState(\"\");\n  const users = useRef({});\n  const localVideoref = useRef(null);\n  const userStatusref = useRef(null);\n  const remoteVideoref = useRef(null);\n\n  useEffect(() => {\n    navigator.mediaDevices\n      .getUserMedia({\n        video: true,\n        audio: true,\n      })\n      .then((stream) => {\n        localStream = stream;\n        stream.onaddtrack = (c) => {\n          console.log(c);\n        };\n        setTimeout(() => {\n          let remoteVideo = document.getElementById(\"myStreem\");\n          console.log(remoteVideo, socket.id);\n          remoteVideo.srcObject = stream;\n        }, 1000);\n      })\n      .catch((e) => console.log(e));\n    socket = io.connect(\n      \"https://signal.rayabharitechnologies.com/\",\n      // \"https://e8db-2405-204-51ab-f8f3-77-f815-da4e-73f3.ngrok.io\",\n      { secure: false },\n      { transports: [\"websocket\"] }\n    );\n    socket.on(\"connect\", () => {\n      setSocketId(socket.id);\n      console.log(\"connected\", socket.id);\n      socket.emit(\"JOIN-CALL\", { callID: \"1234\", userName: \"name\" });\n      socket.emit(\"GET-USERS-LIST\", { callID: \"1234\", userName: \"name\" });\n    });\n\n    socket.on(\"signal\", (fromId, message) => {\n      if (!cm.connections[fromId]) {\n        cm.addPeer(\n          fromId,\n          (event) => {\n            if (event.candidate != null) {\n              socket.emit(\"signal\", fromId, {\n                ice: event.candidate,\n                from: socket.id,\n              });\n            }\n          },\n          () => {},\n          (event) => {\n            let remoteVideo = document.getElementById(fromId);\n            console.log(\"got remote stream +++++++++++++++++++++++\", event);\n            remoteVideo.srcObject = event.streams[0];\n          }\n        );\n        console.log(\"adding track\");\n        var track = localStream.getVideoTracks()[0];\n        cm.connections[fromId].peer.addTrack(track, localStream);\n      }\n\n      if (message.sdp) {\n        cm.connections[fromId].peer\n          .setRemoteDescription(new RTCSessionDescription(message.sdp))\n          .then(function () {\n            // Only create answers in response to offers\n            if (message.sdp.type === \"offer\") {\n              cm.connections[fromId].peer\n                .createAnswer()\n                .then((description) => {\n                  console.log(\"got description\");\n\n                  cm.connections[fromId].peer\n                    .setLocalDescription(description)\n                    .then(function () {\n                      socket.emit(\"signal\", fromId, {\n                        sdp: cm.connections[fromId].peer.localDescription,\n                        from: socket.id,\n                      });\n                    })\n                    .catch(errorHandler);\n                })\n                .catch(errorHandler);\n            }\n          })\n          .catch(errorHandler);\n      } else if (message.ice) {\n        console.log(message);\n        cm.connections[fromId].peer\n          .addIceCandidate(new RTCIceCandidate(message.ice))\n          .catch(errorHandler);\n      }\n    });\n\n    socket.on(\"USER-JOINED\", (d) => {\n      if (!users.current) users.current = {};\n      users.current = { ...users.current, [d]: {} };\n      console.log(\"user joined\");\n      setUser(users.current);\n    });\n    socket.on(\"USERS-LIST\", (usersList) => {\n      console.log(usersList);\n      users.current = { ...usersList };\n\n      setUser(users.current);\n    });\n    socket.on(\"USER-LEFT\", (d) => {\n      if (!users.current) users.current = {};\n      delete users.current[d];\n      users.current = { ...users.current };\n      setUser(users.current);\n    });\n    setInterval(() => {\n      // console.log(\"check\", users.current);\n      Object.keys(users.current).map((us) => {\n        if (us !== socket.id) {\n          console.log(\"connect\", us);\n          console.log(cm.connections[us]?.peer?.connectionState);\n          userStatusref.current = {\n            ...userStatusref.current,\n            [us]: cm.connections[us]?.peer?.connectionState,\n          };\n          setUserStatus(userStatusref.current);\n          console.log(userStatus);\n          if (!cm.connections[us]) {\n            requestConnection(us);\n          }\n        }\n      });\n    }, 2000);\n  }, []);\n\n  const requestConnection = (u) => {\n    if (!cm.connections[u]) {\n      cm.addPeer(\n        u,\n        (event) => {\n          if (event.candidate != null) {\n            socket.emit(\"signal\", u, {\n              ice: event.candidate,\n              from: socket.id,\n            });\n          }\n        },\n        () => {},\n        (event) => {\n          let remoteVideo = document.getElementById(u);\n          remoteVideo.srcObject = event.streams[0];\n        }\n      );\n\n      var track = localStream.getVideoTracks()[0];\n      cm.connections[u].peer.addTrack(track, localStream);\n      cm.connections[u].peer\n        .createOffer()\n        .then((description) => {\n          console.log(\"got description\");\n\n          cm.connections[u].peer\n            .setLocalDescription(description)\n            .then(function () {\n              socket.emit(\"signal\", u, {\n                sdp: cm.connections[u].peer.localDescription,\n              });\n            })\n            .catch((e) => console.log(e));\n        })\n        .catch((e) => console.log(e));\n\n      socket.emit(\"signal\", u, {\n        to: u,\n        from: socket.id,\n        signal: \"ok\",\n      });\n    }\n  };\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        height: \"100%\",\n        width: \"100%\",\n        border: \"1px solid red\",\n        display: \"flex\",\n        flexDirection: \"column\",\n      }}\n    >\n      <div>Header</div>\n      <div style={{ flex: 1, border: \"1px solid green\", display: \"flex\" }}>\n        <div\n          style={{\n            flex: 1,\n            border: \"1px solid blue\",\n            display: \"flex\",\n            flexWrap: \"wrap\",\n          }}\n        >\n          <video\n            id={\"myStreem\"}\n            autoPlay\n            muted\n            style={{\n              border: \"1px solid green\",\n              width: 500,\n              height: 500,\n            }}\n          ></video>\n          {/* {Object.keys(users.current).map((u, i) => (\n            <div\n              key={u}\n              style={{\n                padding: 10,\n                margin: 2,\n                border: \"1px solid red\",\n                maxHeight: 300,\n                minWidth: 300,\n                flex: 1,\n              }}\n            >\n              USER-{i}\n              {socket && u !== socket.id && (\n                <>\n                  <Button\n                    onClick={() => {\n                      if (!cm.connections[u]) {\n                        cm.addPeer(\n                          u,\n                          (event) => {\n                            if (event.candidate != null) {\n                              socket.emit(\"signal\", u, {\n                                ice: event.candidate,\n                                from: socket.id,\n                              });\n                            }\n                          },\n                          () => {},\n                          (event) => {\n                            let remoteVideo = document.getElementById(u);\n                            console.log(\n                              \"got remote stream +++++++++++++++++++++++0000\",\n                              event\n                            );\n                            remoteVideo.srcObject = event.streams[0];\n                          }\n                        );\n\n                        var track = localStream.getVideoTracks()[0];\n                        cm.connections[u].peer.addTrack(track, localStream);\n                        cm.connections[u].peer\n                          .createOffer()\n                          .then((description) => {\n                            console.log(\"got description\");\n\n                            cm.connections[u].peer\n                              .setLocalDescription(description)\n                              .then(function () {\n                                socket.emit(\"signal\", u, {\n                                  sdp: cm.connections[u].peer.localDescription,\n                                });\n                              })\n                              .catch((e) => console.log(e));\n                          })\n                          .catch((e) => console.log(e));\n\n                        socket.emit(\"signal\", u, {\n                          to: u,\n                          from: socket.id,\n                          signal: \"ok\",\n                        });\n                      }\n                    }}\n                  >\n                    {\" \"}\n                    Connect\n                  </Button>\n                  <Button\n                    onClick={() => {\n                      navigator.mediaDevices\n                        .getUserMedia({\n                          video: true,\n                          audio: true,\n                        })\n                        .then((stream) => {\n                          localStream = stream;\n                          stream.onaddtrack = (c) => {\n                            console.log(c);\n                          };\n                          setTimeout(() => {\n                            let remoteVideo = document.getElementById(\n                              socket.id\n                            );\n                            console.log(remoteVideo, socket.id);\n                            remoteVideo.srcObject = stream;\n                          }, 100);\n                        })\n                        .catch((e) => console.log(e));\n                    }}\n                  >\n                    set Video\n                  </Button>\n                  <Button\n                    onClick={() => {\n                      console.log(\n                        new RTCPeerConnection({\n                          iceServers: [\n                            { urls: \"stun:stun.stunprotocol.org:3478\" },\n                            { urls: \"stun:stun.l.google.com:19302\" },\n                          ],\n                        })\n                      );\n                    }}\n                  >\n                    new peer\n                  </Button>\n                </>\n              )}\n            </div>\n          ))} */}\n        </div>\n        <div style={{ border: \"1px solid pink\", overflow: \"scroll\" }}>\n          {Object.keys(users.current).map((u, i) => (\n            <div key={\"aaa\" + u}>\n              {socket && u !== socket.id && (\n                <div\n                  key={u}\n                  style={{\n                    padding: 10,\n                    margin: 2,\n                    border: \"1px solid red\",\n                  }}\n                >\n                  <div>\n                    <video\n                      id={u}\n                      autoPlay\n                      muted\n                      style={{\n                        flex: 1,\n                        border: \"1px solid green\",\n                        maxWidth: 200,\n                        maxHeight: 200,\n                      }}\n                    ></video>\n                  </div>\n                  <div style={{ textAlign: \"center\" }}>\n                    {\" \"}\n                    USER-{i} -({userStatus[u]})\n                    {/* <Button\n                      onClick={() => {\n                        if (!cm.connections[u]) {\n                          cm.addPeer(\n                            u,\n                            (event) => {\n                              if (event.candidate != null) {\n                                socket.emit(\"signal\", u, {\n                                  ice: event.candidate,\n                                  from: socket.id,\n                                });\n                              }\n                            },\n                            () => {},\n                            (event) => {\n                              let remoteVideo = document.getElementById(u);\n                              console.log(\n                                \"got remote stream +++++++++++++++++++++++0000\",\n                                event\n                              );\n                              remoteVideo.srcObject = event.streams[0];\n                            }\n                          );\n\n                          var track = localStream.getVideoTracks()[0];\n                          cm.connections[u].peer.addTrack(track, localStream);\n                          cm.connections[u].peer\n                            .createOffer()\n                            .then((description) => {\n                              console.log(\"got description\");\n\n                              cm.connections[u].peer\n                                .setLocalDescription(description)\n                                .then(function () {\n                                  socket.emit(\"signal\", u, {\n                                    sdp:\n                                      cm.connections[u].peer.localDescription,\n                                  });\n                                })\n                                .catch((e) => console.log(e));\n                            })\n                            .catch((e) => console.log(e));\n\n                          socket.emit(\"signal\", u, {\n                            to: u,\n                            from: socket.id,\n                            signal: \"ok\",\n                          });\n                        }\n                      }}\n                    >\n                      {u}\n                      Connect\n                    </Button> */}\n                  </div>\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n      <div\n        onClick={() => {\n          console.log(cm.connections);\n          // let remoteVideo = document.getElementById(socket.id);\n          // remoteVideo.srcObject = stream;\n          // console.log(remoteVideo, socket.id);\n        }}\n      >\n        Footer\n      </div>\n    </div>\n  );\n};\n\nexport default Meeting;\n","import { useEffect } from \"react\";\n\nconst CreateMeeting = () => {\n  useEffect(() => {}, []);\n  return <div>Create Meeting Page</div>;\n};\n\nexport default CreateMeeting;\n","const peerConnectionConfig = {\n  iceServers: [\n    { urls: \"stun:stun.l.google.com:19302\" },\n    { urls: \"stun:global.stun.twilio.com:3478?transport=udp\" },\n    {\n      urls: \"turn:turnsrv.rayabharitechnologies.com:3478\",\n      username: \"turnuser\",\n      credential: \"1340\",\n    },\n  ],\n};\nclass CallManager {\n  connections = {};\n  //   constructor() {}\n  addPeer(id, onicecandidate, onaddstream, ontrack) {\n    if (!this.connections[id])\n      this.connections[id] = {\n        peer: new RTCPeerConnection(peerConnectionConfig),\n      };\n    if (onicecandidate)\n      this.connections[id].peer.onicecandidate = onicecandidate;\n    if (onaddstream) this.connections[id].peer.onaddstream = onaddstream;\n    if (ontrack) this.connections[id].peer.ontrack = ontrack;\n  }\n}\nconst cm = new CallManager();\nexport default cm;\n","import React from \"react\";\n// import { Button } from \"antd\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport VideoCall from \"./components/VideoCall\";\nimport CreateMeeting from \"./pages/CreatePage\";\nimport Meeting from \"./pages/Meeting\";\nexport default function App() {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route path=\"/creat-meeting\">\n            <CreateMeeting />\n          </Route>\n          <Route path=\"/meeting/:id\">\n            <Meeting />\n          </Route>\n          <Route path=\"/\">\n            <Meeting />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}